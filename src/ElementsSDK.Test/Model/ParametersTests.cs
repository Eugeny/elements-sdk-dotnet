/*
 * ELEMENTS API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ElementsSDK.Api;
using ElementsSDK.Model;
using ElementsSDK.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ElementsSDK.Test.Model
{
    /// <summary>
    ///  Class for testing Parameters
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ParametersTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Parameters
        //private Parameters instance;

        public ParametersTests()
        {
            // TODO uncomment below to create an instance of Parameters
            //instance = new Parameters();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Parameters
        /// </summary>
        [Fact]
        public void ParametersInstanceTest()
        {
            // TODO uncomment below to test "IsType" Parameters
            //Assert.IsType<Parameters>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'MediaForceShowDeleted'
        /// </summary>
        [Fact]
        public void MediaForceShowDeletedTest()
        {
            // TODO unit test for the property 'MediaForceShowDeleted'
        }
        /// <summary>
        /// Test the property 'Analytics'
        /// </summary>
        [Fact]
        public void AnalyticsTest()
        {
            // TODO unit test for the property 'Analytics'
        }
        /// <summary>
        /// Test the property 'IdentifyCommand'
        /// </summary>
        [Fact]
        public void IdentifyCommandTest()
        {
            // TODO unit test for the property 'IdentifyCommand'
        }
        /// <summary>
        /// Test the property 'ExternalUrl'
        /// </summary>
        [Fact]
        public void ExternalUrlTest()
        {
            // TODO unit test for the property 'ExternalUrl'
        }
        /// <summary>
        /// Test the property 'BrandingCss'
        /// </summary>
        [Fact]
        public void BrandingCssTest()
        {
            // TODO unit test for the property 'BrandingCss'
        }
        /// <summary>
        /// Test the property 'BrandingLogo'
        /// </summary>
        [Fact]
        public void BrandingLogoTest()
        {
            // TODO unit test for the property 'BrandingLogo'
        }
        /// <summary>
        /// Test the property 'FmNewDirectoryMode'
        /// </summary>
        [Fact]
        public void FmNewDirectoryModeTest()
        {
            // TODO unit test for the property 'FmNewDirectoryMode'
        }
        /// <summary>
        /// Test the property 'IcapServer'
        /// </summary>
        [Fact]
        public void IcapServerTest()
        {
            // TODO unit test for the property 'IcapServer'
        }
        /// <summary>
        /// Test the property 'IcapPort'
        /// </summary>
        [Fact]
        public void IcapPortTest()
        {
            // TODO unit test for the property 'IcapPort'
        }
        /// <summary>
        /// Test the property 'IcapService'
        /// </summary>
        [Fact]
        public void IcapServiceTest()
        {
            // TODO unit test for the property 'IcapService'
        }
        /// <summary>
        /// Test the property 'LtfsDefaultRestoreToOriginalLocation'
        /// </summary>
        [Fact]
        public void LtfsDefaultRestoreToOriginalLocationTest()
        {
            // TODO unit test for the property 'LtfsDefaultRestoreToOriginalLocation'
        }
        /// <summary>
        /// Test the property 'LtfsDefaultSearchDirectories'
        /// </summary>
        [Fact]
        public void LtfsDefaultSearchDirectoriesTest()
        {
            // TODO unit test for the property 'LtfsDefaultSearchDirectories'
        }
        /// <summary>
        /// Test the property 'LtfsLibraryAddress'
        /// </summary>
        [Fact]
        public void LtfsLibraryAddressTest()
        {
            // TODO unit test for the property 'LtfsLibraryAddress'
        }
        /// <summary>
        /// Test the property 'MediaAutoPlay'
        /// </summary>
        [Fact]
        public void MediaAutoPlayTest()
        {
            // TODO unit test for the property 'MediaAutoPlay'
        }
        /// <summary>
        /// Test the property 'MediaAutoTransport'
        /// </summary>
        [Fact]
        public void MediaAutoTransportTest()
        {
            // TODO unit test for the property 'MediaAutoTransport'
        }
        /// <summary>
        /// Test the property 'MediaAutoScan'
        /// </summary>
        [Fact]
        public void MediaAutoScanTest()
        {
            // TODO unit test for the property 'MediaAutoScan'
        }
        /// <summary>
        /// Test the property 'MediaAutoProxy'
        /// </summary>
        [Fact]
        public void MediaAutoProxyTest()
        {
            // TODO unit test for the property 'MediaAutoProxy'
        }
        /// <summary>
        /// Test the property 'MediaAutoVeritoneUpload'
        /// </summary>
        [Fact]
        public void MediaAutoVeritoneUploadTest()
        {
            // TODO unit test for the property 'MediaAutoVeritoneUpload'
        }
        /// <summary>
        /// Test the property 'MediaProxyH264Preset'
        /// </summary>
        [Fact]
        public void MediaProxyH264PresetTest()
        {
            // TODO unit test for the property 'MediaProxyH264Preset'
        }
        /// <summary>
        /// Test the property 'MediaDefaultCustomFieldType'
        /// </summary>
        [Fact]
        public void MediaDefaultCustomFieldTypeTest()
        {
            // TODO unit test for the property 'MediaDefaultCustomFieldType'
        }
        /// <summary>
        /// Test the property 'MediaDefaultDeleteBehaviour'
        /// </summary>
        [Fact]
        public void MediaDefaultDeleteBehaviourTest()
        {
            // TODO unit test for the property 'MediaDefaultDeleteBehaviour'
        }
        /// <summary>
        /// Test the property 'MediaRecycleBin'
        /// </summary>
        [Fact]
        public void MediaRecycleBinTest()
        {
            // TODO unit test for the property 'MediaRecycleBin'
        }
        /// <summary>
        /// Test the property 'FileManagerRecycleBin'
        /// </summary>
        [Fact]
        public void FileManagerRecycleBinTest()
        {
            // TODO unit test for the property 'FileManagerRecycleBin'
        }
        /// <summary>
        /// Test the property 'NtpOfferSync'
        /// </summary>
        [Fact]
        public void NtpOfferSyncTest()
        {
            // TODO unit test for the property 'NtpOfferSync'
        }
        /// <summary>
        /// Test the property 'SlugifyWorkspacePath'
        /// </summary>
        [Fact]
        public void SlugifyWorkspacePathTest()
        {
            // TODO unit test for the property 'SlugifyWorkspacePath'
        }
        /// <summary>
        /// Test the property 'SlugifyShares'
        /// </summary>
        [Fact]
        public void SlugifySharesTest()
        {
            // TODO unit test for the property 'SlugifyShares'
        }
        /// <summary>
        /// Test the property 'SmtpFrom'
        /// </summary>
        [Fact]
        public void SmtpFromTest()
        {
            // TODO unit test for the property 'SmtpFrom'
        }
        /// <summary>
        /// Test the property 'SmtpServer'
        /// </summary>
        [Fact]
        public void SmtpServerTest()
        {
            // TODO unit test for the property 'SmtpServer'
        }
        /// <summary>
        /// Test the property 'SmtpPort'
        /// </summary>
        [Fact]
        public void SmtpPortTest()
        {
            // TODO unit test for the property 'SmtpPort'
        }
        /// <summary>
        /// Test the property 'SmtpTls'
        /// </summary>
        [Fact]
        public void SmtpTlsTest()
        {
            // TODO unit test for the property 'SmtpTls'
        }
        /// <summary>
        /// Test the property 'SmtpUsername'
        /// </summary>
        [Fact]
        public void SmtpUsernameTest()
        {
            // TODO unit test for the property 'SmtpUsername'
        }
        /// <summary>
        /// Test the property 'SmtpEhlo'
        /// </summary>
        [Fact]
        public void SmtpEhloTest()
        {
            // TODO unit test for the property 'SmtpEhlo'
        }
        /// <summary>
        /// Test the property 'MailStyling'
        /// </summary>
        [Fact]
        public void MailStylingTest()
        {
            // TODO unit test for the property 'MailStyling'
        }
        /// <summary>
        /// Test the property 'TasksLimit'
        /// </summary>
        [Fact]
        public void TasksLimitTest()
        {
            // TODO unit test for the property 'TasksLimit'
        }
        /// <summary>
        /// Test the property 'TasksHardLimit'
        /// </summary>
        [Fact]
        public void TasksHardLimitTest()
        {
            // TODO unit test for the property 'TasksHardLimit'
        }
        /// <summary>
        /// Test the property 'UmaskAfp'
        /// </summary>
        [Fact]
        public void UmaskAfpTest()
        {
            // TODO unit test for the property 'UmaskAfp'
        }
        /// <summary>
        /// Test the property 'UmaskSmb'
        /// </summary>
        [Fact]
        public void UmaskSmbTest()
        {
            // TODO unit test for the property 'UmaskSmb'
        }
        /// <summary>
        /// Test the property 'UsersDefaultPermissions'
        /// </summary>
        [Fact]
        public void UsersDefaultPermissionsTest()
        {
            // TODO unit test for the property 'UsersDefaultPermissions'
        }
        /// <summary>
        /// Test the property 'WorkspacesFolderTemplatePath'
        /// </summary>
        [Fact]
        public void WorkspacesFolderTemplatePathTest()
        {
            // TODO unit test for the property 'WorkspacesFolderTemplatePath'
        }
        /// <summary>
        /// Test the property 'WorkspacesMode'
        /// </summary>
        [Fact]
        public void WorkspacesModeTest()
        {
            // TODO unit test for the property 'WorkspacesMode'
        }
        /// <summary>
        /// Test the property 'WorkspacesPath'
        /// </summary>
        [Fact]
        public void WorkspacesPathTest()
        {
            // TODO unit test for the property 'WorkspacesPath'
        }
        /// <summary>
        /// Test the property 'Language'
        /// </summary>
        [Fact]
        public void LanguageTest()
        {
            // TODO unit test for the property 'Language'
        }
        /// <summary>
        /// Test the property 'EmailLogoUrl'
        /// </summary>
        [Fact]
        public void EmailLogoUrlTest()
        {
            // TODO unit test for the property 'EmailLogoUrl'
        }
        /// <summary>
        /// Test the property 'MediaKeepSelectionWhenBrowsing'
        /// </summary>
        [Fact]
        public void MediaKeepSelectionWhenBrowsingTest()
        {
            // TODO unit test for the property 'MediaKeepSelectionWhenBrowsing'
        }
        /// <summary>
        /// Test the property 'TasksRunScheduled'
        /// </summary>
        [Fact]
        public void TasksRunScheduledTest()
        {
            // TODO unit test for the property 'TasksRunScheduled'
        }
        /// <summary>
        /// Test the property 'HttpsRedirect'
        /// </summary>
        [Fact]
        public void HttpsRedirectTest()
        {
            // TODO unit test for the property 'HttpsRedirect'
        }
        /// <summary>
        /// Test the property 'OtpPolicy'
        /// </summary>
        [Fact]
        public void OtpPolicyTest()
        {
            // TODO unit test for the property 'OtpPolicy'
        }

    }

}
