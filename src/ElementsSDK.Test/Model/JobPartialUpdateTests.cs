/*
 * ELEMENTS API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ElementsSDK.Api;
using ElementsSDK.Model;
using ElementsSDK.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ElementsSDK.Test.Model
{
    /// <summary>
    ///  Class for testing JobPartialUpdate
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class JobPartialUpdateTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for JobPartialUpdate
        //private JobPartialUpdate instance;

        public JobPartialUpdateTests()
        {
            // TODO uncomment below to create an instance of JobPartialUpdate
            //instance = new JobPartialUpdate();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of JobPartialUpdate
        /// </summary>
        [Fact]
        public void JobPartialUpdateInstanceTest()
        {
            // TODO uncomment below to test "IsType" JobPartialUpdate
            //Assert.IsType<JobPartialUpdate>(instance);
        }


        /// <summary>
        /// Test the property 'Subtasks'
        /// </summary>
        [Fact]
        public void SubtasksTest()
        {
            // TODO unit test for the property 'Subtasks'
        }
        /// <summary>
        /// Test the property 'Schedules'
        /// </summary>
        [Fact]
        public void SchedulesTest()
        {
            // TODO unit test for the property 'Schedules'
        }
        /// <summary>
        /// Test the property 'AllowUsers'
        /// </summary>
        [Fact]
        public void AllowUsersTest()
        {
            // TODO unit test for the property 'AllowUsers'
        }
        /// <summary>
        /// Test the property 'AllowGroups'
        /// </summary>
        [Fact]
        public void AllowGroupsTest()
        {
            // TODO unit test for the property 'AllowGroups'
        }
        /// <summary>
        /// Test the property 'VariableDefinitions'
        /// </summary>
        [Fact]
        public void VariableDefinitionsTest()
        {
            // TODO unit test for the property 'VariableDefinitions'
        }
        /// <summary>
        /// Test the property 'MediaRoots'
        /// </summary>
        [Fact]
        public void MediaRootsTest()
        {
            // TODO unit test for the property 'MediaRoots'
        }
        /// <summary>
        /// Test the property 'SpecialType'
        /// </summary>
        [Fact]
        public void SpecialTypeTest()
        {
            // TODO unit test for the property 'SpecialType'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Enabled'
        /// </summary>
        [Fact]
        public void EnabledTest()
        {
            // TODO unit test for the property 'Enabled'
        }
        /// <summary>
        /// Test the property 'AllowOthersToStart'
        /// </summary>
        [Fact]
        public void AllowOthersToStartTest()
        {
            // TODO unit test for the property 'AllowOthersToStart'
        }
        /// <summary>
        /// Test the property 'AllowClientToStart'
        /// </summary>
        [Fact]
        public void AllowClientToStartTest()
        {
            // TODO unit test for the property 'AllowClientToStart'
        }
        /// <summary>
        /// Test the property 'ShowAsButton'
        /// </summary>
        [Fact]
        public void ShowAsButtonTest()
        {
            // TODO unit test for the property 'ShowAsButton'
        }
        /// <summary>
        /// Test the property 'InputType'
        /// </summary>
        [Fact]
        public void InputTypeTest()
        {
            // TODO unit test for the property 'InputType'
        }
        /// <summary>
        /// Test the property 'Hook'
        /// </summary>
        [Fact]
        public void HookTest()
        {
            // TODO unit test for the property 'Hook'
        }
        /// <summary>
        /// Test the property 'WebhookSecret'
        /// </summary>
        [Fact]
        public void WebhookSecretTest()
        {
            // TODO unit test for the property 'WebhookSecret'
        }
        /// <summary>
        /// Test the property 'SecurityContext'
        /// </summary>
        [Fact]
        public void SecurityContextTest()
        {
            // TODO unit test for the property 'SecurityContext'
        }
        /// <summary>
        /// Test the property 'PartOfWorkflowFor'
        /// </summary>
        [Fact]
        public void PartOfWorkflowForTest()
        {
            // TODO unit test for the property 'PartOfWorkflowFor'
        }

    }

}
