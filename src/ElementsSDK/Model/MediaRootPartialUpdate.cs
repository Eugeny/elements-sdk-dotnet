/*
 * ELEMENTS API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = ElementsSDK.Client.OpenAPIDateConverter;

namespace ElementsSDK.Model
{
    /// <summary>
    /// MediaRootPartialUpdate
    /// </summary>
    [DataContract(Name = "MediaRootPartialUpdate")]
    public partial class MediaRootPartialUpdate : IEquatable<MediaRootPartialUpdate>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MediaRootPartialUpdate" /> class.
        /// </summary>
        /// <param name="customFields">customFields.</param>
        /// <param name="workflow">workflow.</param>
        /// <param name="aiConfig">aiConfig.</param>
        /// <param name="veritoneConfig">veritoneConfig.</param>
        /// <param name="volume">volume.</param>
        /// <param name="jobs">jobs.</param>
        /// <param name="name">name.</param>
        /// <param name="needsRescan">needsRescan.</param>
        /// <param name="viewMode">viewMode.</param>
        /// <param name="viewStyle">viewStyle.</param>
        /// <param name="viewDefaultTab">viewDefaultTab.</param>
        /// <param name="showTags">showTags.</param>
        /// <param name="showComments">showComments.</param>
        /// <param name="showLocations">showLocations.</param>
        /// <param name="showCustomFields">showCustomFields.</param>
        /// <param name="showRatings">showRatings.</param>
        /// <param name="showSubclips">showSubclips.</param>
        /// <param name="showMarkers">showMarkers.</param>
        /// <param name="showHistory">showHistory.</param>
        /// <param name="showAiMetadata">showAiMetadata.</param>
        /// <param name="prefetchThumbnailStrips">prefetchThumbnailStrips.</param>
        /// <param name="cover">cover.</param>
        /// <param name="nameField">nameField.</param>
        /// <param name="shareComments">shareComments.</param>
        /// <param name="shareLinkDuration">shareLinkDuration.</param>
        /// <param name="defaultProxyProfile">defaultProxyProfile.</param>
        /// <param name="cloudProxyProfile">cloudProxyProfile.</param>
        /// <param name="veritoneConnection">veritoneConnection.</param>
        /// <param name="veritoneProxyProfile">veritoneProxyProfile.</param>
        /// <param name="aiConnection">aiConnection.</param>
        /// <param name="aiProxyProfile">aiProxyProfile.</param>
        /// <param name="proxyProfiles">proxyProfiles.</param>
        /// <param name="tags">tags.</param>
        public MediaRootPartialUpdate(List<CustomFieldReference> customFields = default(List<CustomFieldReference>), Dictionary<string, string> workflow = default(Dictionary<string, string>), Dictionary<string, string> aiConfig = default(Dictionary<string, string>), Dictionary<string, string> veritoneConfig = default(Dictionary<string, string>), VolumeMiniReference volume = default(VolumeMiniReference), List<JobReference> jobs = default(List<JobReference>), string name = default(string), bool needsRescan = default(bool), string viewMode = default(string), string viewStyle = default(string), string viewDefaultTab = default(string), bool showTags = default(bool), bool showComments = default(bool), bool showLocations = default(bool), bool showCustomFields = default(bool), bool showRatings = default(bool), bool showSubclips = default(bool), bool showMarkers = default(bool), bool showHistory = default(bool), bool showAiMetadata = default(bool), bool prefetchThumbnailStrips = default(bool), string cover = default(string), string nameField = default(string), bool shareComments = default(bool), int shareLinkDuration = default(int), int? defaultProxyProfile = default(int?), int? cloudProxyProfile = default(int?), int? veritoneConnection = default(int?), int? veritoneProxyProfile = default(int?), int? aiConnection = default(int?), int? aiProxyProfile = default(int?), List<int> proxyProfiles = default(List<int>), List<int> tags = default(List<int>))
        {
            this.CustomFields = customFields;
            this.Workflow = workflow;
            this.AiConfig = aiConfig;
            this.VeritoneConfig = veritoneConfig;
            this.Volume = volume;
            this.Jobs = jobs;
            this.Name = name;
            this.NeedsRescan = needsRescan;
            this.ViewMode = viewMode;
            this.ViewStyle = viewStyle;
            this.ViewDefaultTab = viewDefaultTab;
            this.ShowTags = showTags;
            this.ShowComments = showComments;
            this.ShowLocations = showLocations;
            this.ShowCustomFields = showCustomFields;
            this.ShowRatings = showRatings;
            this.ShowSubclips = showSubclips;
            this.ShowMarkers = showMarkers;
            this.ShowHistory = showHistory;
            this.ShowAiMetadata = showAiMetadata;
            this.PrefetchThumbnailStrips = prefetchThumbnailStrips;
            this.Cover = cover;
            this.NameField = nameField;
            this.ShareComments = shareComments;
            this.ShareLinkDuration = shareLinkDuration;
            this.DefaultProxyProfile = defaultProxyProfile;
            this.CloudProxyProfile = cloudProxyProfile;
            this.VeritoneConnection = veritoneConnection;
            this.VeritoneProxyProfile = veritoneProxyProfile;
            this.AiConnection = aiConnection;
            this.AiProxyProfile = aiProxyProfile;
            this.ProxyProfiles = proxyProfiles;
            this.Tags = tags;
        }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name = "custom_fields", EmitDefaultValue = false)]
        public List<CustomFieldReference> CustomFields { get; set; }

        /// <summary>
        /// Gets or Sets Workflow
        /// </summary>
        [DataMember(Name = "workflow", EmitDefaultValue = true)]
        public Dictionary<string, string> Workflow { get; set; }

        /// <summary>
        /// Gets or Sets AiConfig
        /// </summary>
        [DataMember(Name = "ai_config", EmitDefaultValue = true)]
        public Dictionary<string, string> AiConfig { get; set; }

        /// <summary>
        /// Gets or Sets VeritoneConfig
        /// </summary>
        [DataMember(Name = "veritone_config", EmitDefaultValue = true)]
        public Dictionary<string, string> VeritoneConfig { get; set; }

        /// <summary>
        /// Gets or Sets Volume
        /// </summary>
        [DataMember(Name = "volume", EmitDefaultValue = false)]
        public VolumeMiniReference Volume { get; set; }

        /// <summary>
        /// Gets or Sets Jobs
        /// </summary>
        [DataMember(Name = "jobs", EmitDefaultValue = false)]
        public List<JobReference> Jobs { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Path
        /// </summary>
        [DataMember(Name = "path", EmitDefaultValue = false)]
        public string Path { get; private set; }

        /// <summary>
        /// Returns false as Path should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializePath()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets NeedsRescan
        /// </summary>
        [DataMember(Name = "needs_rescan", EmitDefaultValue = true)]
        public bool NeedsRescan { get; set; }

        /// <summary>
        /// Gets or Sets ViewMode
        /// </summary>
        [DataMember(Name = "view_mode", EmitDefaultValue = false)]
        public string ViewMode { get; set; }

        /// <summary>
        /// Gets or Sets ViewStyle
        /// </summary>
        [DataMember(Name = "view_style", EmitDefaultValue = false)]
        public string ViewStyle { get; set; }

        /// <summary>
        /// Gets or Sets ViewDefaultTab
        /// </summary>
        [DataMember(Name = "view_default_tab", EmitDefaultValue = false)]
        public string ViewDefaultTab { get; set; }

        /// <summary>
        /// Gets or Sets ShowTags
        /// </summary>
        [DataMember(Name = "show_tags", EmitDefaultValue = true)]
        public bool ShowTags { get; set; }

        /// <summary>
        /// Gets or Sets ShowComments
        /// </summary>
        [DataMember(Name = "show_comments", EmitDefaultValue = true)]
        public bool ShowComments { get; set; }

        /// <summary>
        /// Gets or Sets ShowLocations
        /// </summary>
        [DataMember(Name = "show_locations", EmitDefaultValue = true)]
        public bool ShowLocations { get; set; }

        /// <summary>
        /// Gets or Sets ShowCustomFields
        /// </summary>
        [DataMember(Name = "show_custom_fields", EmitDefaultValue = true)]
        public bool ShowCustomFields { get; set; }

        /// <summary>
        /// Gets or Sets ShowRatings
        /// </summary>
        [DataMember(Name = "show_ratings", EmitDefaultValue = true)]
        public bool ShowRatings { get; set; }

        /// <summary>
        /// Gets or Sets ShowSubclips
        /// </summary>
        [DataMember(Name = "show_subclips", EmitDefaultValue = true)]
        public bool ShowSubclips { get; set; }

        /// <summary>
        /// Gets or Sets ShowMarkers
        /// </summary>
        [DataMember(Name = "show_markers", EmitDefaultValue = true)]
        public bool ShowMarkers { get; set; }

        /// <summary>
        /// Gets or Sets ShowHistory
        /// </summary>
        [DataMember(Name = "show_history", EmitDefaultValue = true)]
        public bool ShowHistory { get; set; }

        /// <summary>
        /// Gets or Sets ShowAiMetadata
        /// </summary>
        [DataMember(Name = "show_ai_metadata", EmitDefaultValue = true)]
        public bool ShowAiMetadata { get; set; }

        /// <summary>
        /// Gets or Sets PrefetchThumbnailStrips
        /// </summary>
        [DataMember(Name = "prefetch_thumbnail_strips", EmitDefaultValue = true)]
        public bool PrefetchThumbnailStrips { get; set; }

        /// <summary>
        /// Gets or Sets Cover
        /// </summary>
        [DataMember(Name = "cover", EmitDefaultValue = true)]
        public string Cover { get; set; }

        /// <summary>
        /// Gets or Sets NameField
        /// </summary>
        [DataMember(Name = "name_field", EmitDefaultValue = true)]
        public string NameField { get; set; }

        /// <summary>
        /// Gets or Sets ShareComments
        /// </summary>
        [DataMember(Name = "share_comments", EmitDefaultValue = true)]
        public bool ShareComments { get; set; }

        /// <summary>
        /// Gets or Sets ShareLinkDuration
        /// </summary>
        [DataMember(Name = "share_link_duration", EmitDefaultValue = false)]
        public int ShareLinkDuration { get; set; }

        /// <summary>
        /// Gets or Sets DefaultProxyProfile
        /// </summary>
        [DataMember(Name = "default_proxy_profile", EmitDefaultValue = true)]
        public int? DefaultProxyProfile { get; set; }

        /// <summary>
        /// Gets or Sets CloudProxyProfile
        /// </summary>
        [DataMember(Name = "cloud_proxy_profile", EmitDefaultValue = true)]
        public int? CloudProxyProfile { get; set; }

        /// <summary>
        /// Gets or Sets VeritoneConnection
        /// </summary>
        [DataMember(Name = "veritone_connection", EmitDefaultValue = true)]
        public int? VeritoneConnection { get; set; }

        /// <summary>
        /// Gets or Sets VeritoneProxyProfile
        /// </summary>
        [DataMember(Name = "veritone_proxy_profile", EmitDefaultValue = true)]
        public int? VeritoneProxyProfile { get; set; }

        /// <summary>
        /// Gets or Sets AiConnection
        /// </summary>
        [DataMember(Name = "ai_connection", EmitDefaultValue = true)]
        public int? AiConnection { get; set; }

        /// <summary>
        /// Gets or Sets AiProxyProfile
        /// </summary>
        [DataMember(Name = "ai_proxy_profile", EmitDefaultValue = true)]
        public int? AiProxyProfile { get; set; }

        /// <summary>
        /// Gets or Sets ProxyProfiles
        /// </summary>
        [DataMember(Name = "proxy_profiles", EmitDefaultValue = false)]
        public List<int> ProxyProfiles { get; set; }

        /// <summary>
        /// Gets or Sets Tags
        /// </summary>
        [DataMember(Name = "tags", EmitDefaultValue = false)]
        public List<int> Tags { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MediaRootPartialUpdate {\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("  Workflow: ").Append(Workflow).Append("\n");
            sb.Append("  AiConfig: ").Append(AiConfig).Append("\n");
            sb.Append("  VeritoneConfig: ").Append(VeritoneConfig).Append("\n");
            sb.Append("  Volume: ").Append(Volume).Append("\n");
            sb.Append("  Jobs: ").Append(Jobs).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Path: ").Append(Path).Append("\n");
            sb.Append("  NeedsRescan: ").Append(NeedsRescan).Append("\n");
            sb.Append("  ViewMode: ").Append(ViewMode).Append("\n");
            sb.Append("  ViewStyle: ").Append(ViewStyle).Append("\n");
            sb.Append("  ViewDefaultTab: ").Append(ViewDefaultTab).Append("\n");
            sb.Append("  ShowTags: ").Append(ShowTags).Append("\n");
            sb.Append("  ShowComments: ").Append(ShowComments).Append("\n");
            sb.Append("  ShowLocations: ").Append(ShowLocations).Append("\n");
            sb.Append("  ShowCustomFields: ").Append(ShowCustomFields).Append("\n");
            sb.Append("  ShowRatings: ").Append(ShowRatings).Append("\n");
            sb.Append("  ShowSubclips: ").Append(ShowSubclips).Append("\n");
            sb.Append("  ShowMarkers: ").Append(ShowMarkers).Append("\n");
            sb.Append("  ShowHistory: ").Append(ShowHistory).Append("\n");
            sb.Append("  ShowAiMetadata: ").Append(ShowAiMetadata).Append("\n");
            sb.Append("  PrefetchThumbnailStrips: ").Append(PrefetchThumbnailStrips).Append("\n");
            sb.Append("  Cover: ").Append(Cover).Append("\n");
            sb.Append("  NameField: ").Append(NameField).Append("\n");
            sb.Append("  ShareComments: ").Append(ShareComments).Append("\n");
            sb.Append("  ShareLinkDuration: ").Append(ShareLinkDuration).Append("\n");
            sb.Append("  DefaultProxyProfile: ").Append(DefaultProxyProfile).Append("\n");
            sb.Append("  CloudProxyProfile: ").Append(CloudProxyProfile).Append("\n");
            sb.Append("  VeritoneConnection: ").Append(VeritoneConnection).Append("\n");
            sb.Append("  VeritoneProxyProfile: ").Append(VeritoneProxyProfile).Append("\n");
            sb.Append("  AiConnection: ").Append(AiConnection).Append("\n");
            sb.Append("  AiProxyProfile: ").Append(AiProxyProfile).Append("\n");
            sb.Append("  ProxyProfiles: ").Append(ProxyProfiles).Append("\n");
            sb.Append("  Tags: ").Append(Tags).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MediaRootPartialUpdate);
        }

        /// <summary>
        /// Returns true if MediaRootPartialUpdate instances are equal
        /// </summary>
        /// <param name="input">Instance of MediaRootPartialUpdate to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MediaRootPartialUpdate input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CustomFields == input.CustomFields ||
                    this.CustomFields != null &&
                    input.CustomFields != null &&
                    this.CustomFields.SequenceEqual(input.CustomFields)
                ) && 
                (
                    this.Workflow == input.Workflow ||
                    this.Workflow != null &&
                    input.Workflow != null &&
                    this.Workflow.SequenceEqual(input.Workflow)
                ) && 
                (
                    this.AiConfig == input.AiConfig ||
                    this.AiConfig != null &&
                    input.AiConfig != null &&
                    this.AiConfig.SequenceEqual(input.AiConfig)
                ) && 
                (
                    this.VeritoneConfig == input.VeritoneConfig ||
                    this.VeritoneConfig != null &&
                    input.VeritoneConfig != null &&
                    this.VeritoneConfig.SequenceEqual(input.VeritoneConfig)
                ) && 
                (
                    this.Volume == input.Volume ||
                    (this.Volume != null &&
                    this.Volume.Equals(input.Volume))
                ) && 
                (
                    this.Jobs == input.Jobs ||
                    this.Jobs != null &&
                    input.Jobs != null &&
                    this.Jobs.SequenceEqual(input.Jobs)
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Path == input.Path ||
                    (this.Path != null &&
                    this.Path.Equals(input.Path))
                ) && 
                (
                    this.NeedsRescan == input.NeedsRescan ||
                    this.NeedsRescan.Equals(input.NeedsRescan)
                ) && 
                (
                    this.ViewMode == input.ViewMode ||
                    (this.ViewMode != null &&
                    this.ViewMode.Equals(input.ViewMode))
                ) && 
                (
                    this.ViewStyle == input.ViewStyle ||
                    (this.ViewStyle != null &&
                    this.ViewStyle.Equals(input.ViewStyle))
                ) && 
                (
                    this.ViewDefaultTab == input.ViewDefaultTab ||
                    (this.ViewDefaultTab != null &&
                    this.ViewDefaultTab.Equals(input.ViewDefaultTab))
                ) && 
                (
                    this.ShowTags == input.ShowTags ||
                    this.ShowTags.Equals(input.ShowTags)
                ) && 
                (
                    this.ShowComments == input.ShowComments ||
                    this.ShowComments.Equals(input.ShowComments)
                ) && 
                (
                    this.ShowLocations == input.ShowLocations ||
                    this.ShowLocations.Equals(input.ShowLocations)
                ) && 
                (
                    this.ShowCustomFields == input.ShowCustomFields ||
                    this.ShowCustomFields.Equals(input.ShowCustomFields)
                ) && 
                (
                    this.ShowRatings == input.ShowRatings ||
                    this.ShowRatings.Equals(input.ShowRatings)
                ) && 
                (
                    this.ShowSubclips == input.ShowSubclips ||
                    this.ShowSubclips.Equals(input.ShowSubclips)
                ) && 
                (
                    this.ShowMarkers == input.ShowMarkers ||
                    this.ShowMarkers.Equals(input.ShowMarkers)
                ) && 
                (
                    this.ShowHistory == input.ShowHistory ||
                    this.ShowHistory.Equals(input.ShowHistory)
                ) && 
                (
                    this.ShowAiMetadata == input.ShowAiMetadata ||
                    this.ShowAiMetadata.Equals(input.ShowAiMetadata)
                ) && 
                (
                    this.PrefetchThumbnailStrips == input.PrefetchThumbnailStrips ||
                    this.PrefetchThumbnailStrips.Equals(input.PrefetchThumbnailStrips)
                ) && 
                (
                    this.Cover == input.Cover ||
                    (this.Cover != null &&
                    this.Cover.Equals(input.Cover))
                ) && 
                (
                    this.NameField == input.NameField ||
                    (this.NameField != null &&
                    this.NameField.Equals(input.NameField))
                ) && 
                (
                    this.ShareComments == input.ShareComments ||
                    this.ShareComments.Equals(input.ShareComments)
                ) && 
                (
                    this.ShareLinkDuration == input.ShareLinkDuration ||
                    this.ShareLinkDuration.Equals(input.ShareLinkDuration)
                ) && 
                (
                    this.DefaultProxyProfile == input.DefaultProxyProfile ||
                    (this.DefaultProxyProfile != null &&
                    this.DefaultProxyProfile.Equals(input.DefaultProxyProfile))
                ) && 
                (
                    this.CloudProxyProfile == input.CloudProxyProfile ||
                    (this.CloudProxyProfile != null &&
                    this.CloudProxyProfile.Equals(input.CloudProxyProfile))
                ) && 
                (
                    this.VeritoneConnection == input.VeritoneConnection ||
                    (this.VeritoneConnection != null &&
                    this.VeritoneConnection.Equals(input.VeritoneConnection))
                ) && 
                (
                    this.VeritoneProxyProfile == input.VeritoneProxyProfile ||
                    (this.VeritoneProxyProfile != null &&
                    this.VeritoneProxyProfile.Equals(input.VeritoneProxyProfile))
                ) && 
                (
                    this.AiConnection == input.AiConnection ||
                    (this.AiConnection != null &&
                    this.AiConnection.Equals(input.AiConnection))
                ) && 
                (
                    this.AiProxyProfile == input.AiProxyProfile ||
                    (this.AiProxyProfile != null &&
                    this.AiProxyProfile.Equals(input.AiProxyProfile))
                ) && 
                (
                    this.ProxyProfiles == input.ProxyProfiles ||
                    this.ProxyProfiles != null &&
                    input.ProxyProfiles != null &&
                    this.ProxyProfiles.SequenceEqual(input.ProxyProfiles)
                ) && 
                (
                    this.Tags == input.Tags ||
                    this.Tags != null &&
                    input.Tags != null &&
                    this.Tags.SequenceEqual(input.Tags)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CustomFields != null)
                    hashCode = hashCode * 59 + this.CustomFields.GetHashCode();
                if (this.Workflow != null)
                    hashCode = hashCode * 59 + this.Workflow.GetHashCode();
                if (this.AiConfig != null)
                    hashCode = hashCode * 59 + this.AiConfig.GetHashCode();
                if (this.VeritoneConfig != null)
                    hashCode = hashCode * 59 + this.VeritoneConfig.GetHashCode();
                if (this.Volume != null)
                    hashCode = hashCode * 59 + this.Volume.GetHashCode();
                if (this.Jobs != null)
                    hashCode = hashCode * 59 + this.Jobs.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Path != null)
                    hashCode = hashCode * 59 + this.Path.GetHashCode();
                hashCode = hashCode * 59 + this.NeedsRescan.GetHashCode();
                if (this.ViewMode != null)
                    hashCode = hashCode * 59 + this.ViewMode.GetHashCode();
                if (this.ViewStyle != null)
                    hashCode = hashCode * 59 + this.ViewStyle.GetHashCode();
                if (this.ViewDefaultTab != null)
                    hashCode = hashCode * 59 + this.ViewDefaultTab.GetHashCode();
                hashCode = hashCode * 59 + this.ShowTags.GetHashCode();
                hashCode = hashCode * 59 + this.ShowComments.GetHashCode();
                hashCode = hashCode * 59 + this.ShowLocations.GetHashCode();
                hashCode = hashCode * 59 + this.ShowCustomFields.GetHashCode();
                hashCode = hashCode * 59 + this.ShowRatings.GetHashCode();
                hashCode = hashCode * 59 + this.ShowSubclips.GetHashCode();
                hashCode = hashCode * 59 + this.ShowMarkers.GetHashCode();
                hashCode = hashCode * 59 + this.ShowHistory.GetHashCode();
                hashCode = hashCode * 59 + this.ShowAiMetadata.GetHashCode();
                hashCode = hashCode * 59 + this.PrefetchThumbnailStrips.GetHashCode();
                if (this.Cover != null)
                    hashCode = hashCode * 59 + this.Cover.GetHashCode();
                if (this.NameField != null)
                    hashCode = hashCode * 59 + this.NameField.GetHashCode();
                hashCode = hashCode * 59 + this.ShareComments.GetHashCode();
                hashCode = hashCode * 59 + this.ShareLinkDuration.GetHashCode();
                if (this.DefaultProxyProfile != null)
                    hashCode = hashCode * 59 + this.DefaultProxyProfile.GetHashCode();
                if (this.CloudProxyProfile != null)
                    hashCode = hashCode * 59 + this.CloudProxyProfile.GetHashCode();
                if (this.VeritoneConnection != null)
                    hashCode = hashCode * 59 + this.VeritoneConnection.GetHashCode();
                if (this.VeritoneProxyProfile != null)
                    hashCode = hashCode * 59 + this.VeritoneProxyProfile.GetHashCode();
                if (this.AiConnection != null)
                    hashCode = hashCode * 59 + this.AiConnection.GetHashCode();
                if (this.AiProxyProfile != null)
                    hashCode = hashCode * 59 + this.AiProxyProfile.GetHashCode();
                if (this.ProxyProfiles != null)
                    hashCode = hashCode * 59 + this.ProxyProfiles.GetHashCode();
                if (this.Tags != null)
                    hashCode = hashCode * 59 + this.Tags.GetHashCode();
                return hashCode;
            }
        }

    }

}
