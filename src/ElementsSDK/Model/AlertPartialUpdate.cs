/*
 * ELEMENTS API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = ElementsSDK.Client.OpenAPIDateConverter;

namespace ElementsSDK.Model
{
    /// <summary>
    /// AlertPartialUpdate
    /// </summary>
    [DataContract(Name = "AlertPartialUpdate")]
    public partial class AlertPartialUpdate : IEquatable<AlertPartialUpdate>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlertPartialUpdate" /> class.
        /// </summary>
        /// <param name="name">name.</param>
        /// <param name="message">message.</param>
        /// <param name="level">level.</param>
        /// <param name="isOpen">isOpen.</param>
        /// <param name="closedAt">closedAt.</param>
        public AlertPartialUpdate(string name = default(string), string message = default(string), string level = default(string), bool isOpen = default(bool), DateTime? closedAt = default(DateTime?))
        {
            this.Name = name;
            this.Message = message;
            this.Level = level;
            this.IsOpen = isOpen;
            this.ClosedAt = closedAt;
        }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name = "message", EmitDefaultValue = false)]
        public string Message { get; set; }

        /// <summary>
        /// Gets or Sets Level
        /// </summary>
        [DataMember(Name = "level", EmitDefaultValue = false)]
        public string Level { get; set; }

        /// <summary>
        /// Gets or Sets IsOpen
        /// </summary>
        [DataMember(Name = "is_open", EmitDefaultValue = true)]
        public bool IsOpen { get; set; }

        /// <summary>
        /// Gets or Sets ClosedAt
        /// </summary>
        [DataMember(Name = "closed_at", EmitDefaultValue = true)]
        public DateTime? ClosedAt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AlertPartialUpdate {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  Level: ").Append(Level).Append("\n");
            sb.Append("  IsOpen: ").Append(IsOpen).Append("\n");
            sb.Append("  ClosedAt: ").Append(ClosedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlertPartialUpdate);
        }

        /// <summary>
        /// Returns true if AlertPartialUpdate instances are equal
        /// </summary>
        /// <param name="input">Instance of AlertPartialUpdate to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlertPartialUpdate input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                ) && 
                (
                    this.Level == input.Level ||
                    (this.Level != null &&
                    this.Level.Equals(input.Level))
                ) && 
                (
                    this.IsOpen == input.IsOpen ||
                    this.IsOpen.Equals(input.IsOpen)
                ) && 
                (
                    this.ClosedAt == input.ClosedAt ||
                    (this.ClosedAt != null &&
                    this.ClosedAt.Equals(input.ClosedAt))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Message != null)
                    hashCode = hashCode * 59 + this.Message.GetHashCode();
                if (this.Level != null)
                    hashCode = hashCode * 59 + this.Level.GetHashCode();
                hashCode = hashCode * 59 + this.IsOpen.GetHashCode();
                if (this.ClosedAt != null)
                    hashCode = hashCode * 59 + this.ClosedAt.GetHashCode();
                return hashCode;
            }
        }

    }

}
