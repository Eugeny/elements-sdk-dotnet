/*
 * ELEMENTS API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = ElementsSDK.Client.OpenAPIDateConverter;

namespace ElementsSDK.Model
{
    /// <summary>
    /// GenerateProxiesRequest
    /// </summary>
    [DataContract(Name = "GenerateProxiesRequest")]
    public partial class GenerateProxiesRequest : IEquatable<GenerateProxiesRequest>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GenerateProxiesRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GenerateProxiesRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GenerateProxiesRequest" /> class.
        /// </summary>
        /// <param name="bundles">bundles.</param>
        /// <param name="directories">directories.</param>
        /// <param name="proxyProfiles">proxyProfiles (required).</param>
        /// <param name="enqueueAtFront">enqueueAtFront.</param>
        /// <param name="force">force.</param>
        public GenerateProxiesRequest(List<int> bundles = default(List<int>), List<int> directories = default(List<int>), List<int> proxyProfiles = default(List<int>), bool enqueueAtFront = default(bool), bool force = default(bool))
        {
            // to ensure "proxyProfiles" is required (not null)
            this.ProxyProfiles = proxyProfiles ?? throw new ArgumentNullException("proxyProfiles is a required property for GenerateProxiesRequest and cannot be null");
            this.Bundles = bundles;
            this.Directories = directories;
            this.EnqueueAtFront = enqueueAtFront;
            this.Force = force;
        }

        /// <summary>
        /// Gets or Sets Bundles
        /// </summary>
        [DataMember(Name = "bundles", EmitDefaultValue = false)]
        public List<int> Bundles { get; set; }

        /// <summary>
        /// Gets or Sets Directories
        /// </summary>
        [DataMember(Name = "directories", EmitDefaultValue = false)]
        public List<int> Directories { get; set; }

        /// <summary>
        /// Gets or Sets ProxyProfiles
        /// </summary>
        [DataMember(Name = "proxy_profiles", IsRequired = true, EmitDefaultValue = false)]
        public List<int> ProxyProfiles { get; set; }

        /// <summary>
        /// Gets or Sets EnqueueAtFront
        /// </summary>
        [DataMember(Name = "enqueue_at_front", EmitDefaultValue = true)]
        public bool EnqueueAtFront { get; set; }

        /// <summary>
        /// Gets or Sets Force
        /// </summary>
        [DataMember(Name = "force", EmitDefaultValue = true)]
        public bool Force { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GenerateProxiesRequest {\n");
            sb.Append("  Bundles: ").Append(Bundles).Append("\n");
            sb.Append("  Directories: ").Append(Directories).Append("\n");
            sb.Append("  ProxyProfiles: ").Append(ProxyProfiles).Append("\n");
            sb.Append("  EnqueueAtFront: ").Append(EnqueueAtFront).Append("\n");
            sb.Append("  Force: ").Append(Force).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GenerateProxiesRequest);
        }

        /// <summary>
        /// Returns true if GenerateProxiesRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of GenerateProxiesRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GenerateProxiesRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Bundles == input.Bundles ||
                    this.Bundles != null &&
                    input.Bundles != null &&
                    this.Bundles.SequenceEqual(input.Bundles)
                ) && 
                (
                    this.Directories == input.Directories ||
                    this.Directories != null &&
                    input.Directories != null &&
                    this.Directories.SequenceEqual(input.Directories)
                ) && 
                (
                    this.ProxyProfiles == input.ProxyProfiles ||
                    this.ProxyProfiles != null &&
                    input.ProxyProfiles != null &&
                    this.ProxyProfiles.SequenceEqual(input.ProxyProfiles)
                ) && 
                (
                    this.EnqueueAtFront == input.EnqueueAtFront ||
                    this.EnqueueAtFront.Equals(input.EnqueueAtFront)
                ) && 
                (
                    this.Force == input.Force ||
                    this.Force.Equals(input.Force)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Bundles != null)
                    hashCode = hashCode * 59 + this.Bundles.GetHashCode();
                if (this.Directories != null)
                    hashCode = hashCode * 59 + this.Directories.GetHashCode();
                if (this.ProxyProfiles != null)
                    hashCode = hashCode * 59 + this.ProxyProfiles.GetHashCode();
                hashCode = hashCode * 59 + this.EnqueueAtFront.GetHashCode();
                hashCode = hashCode * 59 + this.Force.GetHashCode();
                return hashCode;
            }
        }

    }

}
