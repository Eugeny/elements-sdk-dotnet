/*
 * ELEMENTS API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = ElementsSDK.Client.OpenAPIDateConverter;

namespace ElementsSDK.Model
{
    /// <summary>
    /// FSProperties
    /// </summary>
    [DataContract(Name = "FSProperties")]
    public partial class FSProperties : IEquatable<FSProperties>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FSProperties" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected FSProperties() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="FSProperties" /> class.
        /// </summary>
        /// <param name="supportsDirectoryQuotas">supportsDirectoryQuotas (required).</param>
        /// <param name="supportsSoftQuotas">supportsSoftQuotas (required).</param>
        /// <param name="supportsUserQuotas">supportsUserQuotas (required).</param>
        /// <param name="supportsGroupQuotas">supportsGroupQuotas (required).</param>
        /// <param name="supportsXattrs">supportsXattrs (required).</param>
        /// <param name="supportsSnapshots">supportsSnapshots (required).</param>
        /// <param name="creatingDirectoryQuotaDestroysContent">creatingDirectoryQuotaDestroysContent (required).</param>
        /// <param name="removingDirectoryQuotaDestroysContent">removingDirectoryQuotaDestroysContent (required).</param>
        public FSProperties(bool supportsDirectoryQuotas = default(bool), bool supportsSoftQuotas = default(bool), bool supportsUserQuotas = default(bool), bool supportsGroupQuotas = default(bool), bool supportsXattrs = default(bool), bool supportsSnapshots = default(bool), bool creatingDirectoryQuotaDestroysContent = default(bool), bool removingDirectoryQuotaDestroysContent = default(bool))
        {
            this.SupportsDirectoryQuotas = supportsDirectoryQuotas;
            this.SupportsSoftQuotas = supportsSoftQuotas;
            this.SupportsUserQuotas = supportsUserQuotas;
            this.SupportsGroupQuotas = supportsGroupQuotas;
            this.SupportsXattrs = supportsXattrs;
            this.SupportsSnapshots = supportsSnapshots;
            this.CreatingDirectoryQuotaDestroysContent = creatingDirectoryQuotaDestroysContent;
            this.RemovingDirectoryQuotaDestroysContent = removingDirectoryQuotaDestroysContent;
        }

        /// <summary>
        /// Gets or Sets SupportsDirectoryQuotas
        /// </summary>
        [DataMember(Name = "supports_directory_quotas", IsRequired = true, EmitDefaultValue = true)]
        public bool SupportsDirectoryQuotas { get; set; }

        /// <summary>
        /// Gets or Sets SupportsSoftQuotas
        /// </summary>
        [DataMember(Name = "supports_soft_quotas", IsRequired = true, EmitDefaultValue = true)]
        public bool SupportsSoftQuotas { get; set; }

        /// <summary>
        /// Gets or Sets SupportsUserQuotas
        /// </summary>
        [DataMember(Name = "supports_user_quotas", IsRequired = true, EmitDefaultValue = true)]
        public bool SupportsUserQuotas { get; set; }

        /// <summary>
        /// Gets or Sets SupportsGroupQuotas
        /// </summary>
        [DataMember(Name = "supports_group_quotas", IsRequired = true, EmitDefaultValue = true)]
        public bool SupportsGroupQuotas { get; set; }

        /// <summary>
        /// Gets or Sets SupportsXattrs
        /// </summary>
        [DataMember(Name = "supports_xattrs", IsRequired = true, EmitDefaultValue = true)]
        public bool SupportsXattrs { get; set; }

        /// <summary>
        /// Gets or Sets SupportsSnapshots
        /// </summary>
        [DataMember(Name = "supports_snapshots", IsRequired = true, EmitDefaultValue = true)]
        public bool SupportsSnapshots { get; set; }

        /// <summary>
        /// Gets or Sets CreatingDirectoryQuotaDestroysContent
        /// </summary>
        [DataMember(Name = "creating_directory_quota_destroys_content", IsRequired = true, EmitDefaultValue = true)]
        public bool CreatingDirectoryQuotaDestroysContent { get; set; }

        /// <summary>
        /// Gets or Sets RemovingDirectoryQuotaDestroysContent
        /// </summary>
        [DataMember(Name = "removing_directory_quota_destroys_content", IsRequired = true, EmitDefaultValue = true)]
        public bool RemovingDirectoryQuotaDestroysContent { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class FSProperties {\n");
            sb.Append("  SupportsDirectoryQuotas: ").Append(SupportsDirectoryQuotas).Append("\n");
            sb.Append("  SupportsSoftQuotas: ").Append(SupportsSoftQuotas).Append("\n");
            sb.Append("  SupportsUserQuotas: ").Append(SupportsUserQuotas).Append("\n");
            sb.Append("  SupportsGroupQuotas: ").Append(SupportsGroupQuotas).Append("\n");
            sb.Append("  SupportsXattrs: ").Append(SupportsXattrs).Append("\n");
            sb.Append("  SupportsSnapshots: ").Append(SupportsSnapshots).Append("\n");
            sb.Append("  CreatingDirectoryQuotaDestroysContent: ").Append(CreatingDirectoryQuotaDestroysContent).Append("\n");
            sb.Append("  RemovingDirectoryQuotaDestroysContent: ").Append(RemovingDirectoryQuotaDestroysContent).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as FSProperties);
        }

        /// <summary>
        /// Returns true if FSProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of FSProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(FSProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SupportsDirectoryQuotas == input.SupportsDirectoryQuotas ||
                    this.SupportsDirectoryQuotas.Equals(input.SupportsDirectoryQuotas)
                ) && 
                (
                    this.SupportsSoftQuotas == input.SupportsSoftQuotas ||
                    this.SupportsSoftQuotas.Equals(input.SupportsSoftQuotas)
                ) && 
                (
                    this.SupportsUserQuotas == input.SupportsUserQuotas ||
                    this.SupportsUserQuotas.Equals(input.SupportsUserQuotas)
                ) && 
                (
                    this.SupportsGroupQuotas == input.SupportsGroupQuotas ||
                    this.SupportsGroupQuotas.Equals(input.SupportsGroupQuotas)
                ) && 
                (
                    this.SupportsXattrs == input.SupportsXattrs ||
                    this.SupportsXattrs.Equals(input.SupportsXattrs)
                ) && 
                (
                    this.SupportsSnapshots == input.SupportsSnapshots ||
                    this.SupportsSnapshots.Equals(input.SupportsSnapshots)
                ) && 
                (
                    this.CreatingDirectoryQuotaDestroysContent == input.CreatingDirectoryQuotaDestroysContent ||
                    this.CreatingDirectoryQuotaDestroysContent.Equals(input.CreatingDirectoryQuotaDestroysContent)
                ) && 
                (
                    this.RemovingDirectoryQuotaDestroysContent == input.RemovingDirectoryQuotaDestroysContent ||
                    this.RemovingDirectoryQuotaDestroysContent.Equals(input.RemovingDirectoryQuotaDestroysContent)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.SupportsDirectoryQuotas.GetHashCode();
                hashCode = hashCode * 59 + this.SupportsSoftQuotas.GetHashCode();
                hashCode = hashCode * 59 + this.SupportsUserQuotas.GetHashCode();
                hashCode = hashCode * 59 + this.SupportsGroupQuotas.GetHashCode();
                hashCode = hashCode * 59 + this.SupportsXattrs.GetHashCode();
                hashCode = hashCode * 59 + this.SupportsSnapshots.GetHashCode();
                hashCode = hashCode * 59 + this.CreatingDirectoryQuotaDestroysContent.GetHashCode();
                hashCode = hashCode * 59 + this.RemovingDirectoryQuotaDestroysContent.GetHashCode();
                return hashCode;
            }
        }

    }

}
