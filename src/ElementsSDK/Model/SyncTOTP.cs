/*
 * ELEMENTS API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = ElementsSDK.Client.OpenAPIDateConverter;

namespace ElementsSDK.Model
{
    /// <summary>
    /// SyncTOTP
    /// </summary>
    [DataContract(Name = "SyncTOTP")]
    public partial class SyncTOTP : IEquatable<SyncTOTP>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SyncTOTP" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected SyncTOTP() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="SyncTOTP" /> class.
        /// </summary>
        /// <param name="drift">drift (required).</param>
        public SyncTOTP(int drift = default(int))
        {
            this.Drift = drift;
        }

        /// <summary>
        /// Gets or Sets Drift
        /// </summary>
        [DataMember(Name = "drift", IsRequired = true, EmitDefaultValue = false)]
        public int Drift { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SyncTOTP {\n");
            sb.Append("  Drift: ").Append(Drift).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SyncTOTP);
        }

        /// <summary>
        /// Returns true if SyncTOTP instances are equal
        /// </summary>
        /// <param name="input">Instance of SyncTOTP to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SyncTOTP input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Drift == input.Drift ||
                    this.Drift.Equals(input.Drift)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.Drift.GetHashCode();
                return hashCode;
            }
        }

    }

}
