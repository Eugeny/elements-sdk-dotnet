/*
 * ELEMENTS API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = ElementsSDK.Client.OpenAPIDateConverter;

namespace ElementsSDK.Model
{
    /// <summary>
    /// BackendProperties
    /// </summary>
    [DataContract(Name = "BackendProperties")]
    public partial class BackendProperties : IEquatable<BackendProperties>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BackendProperties" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected BackendProperties() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="BackendProperties" /> class.
        /// </summary>
        /// <param name="supportsSharingRwPermissionsPriority">supportsSharingRwPermissionsPriority (required).</param>
        /// <param name="supportsSharingAfp">supportsSharingAfp (required).</param>
        /// <param name="supportsSharingSmbRequireLogon">supportsSharingSmbRequireLogon (required).</param>
        /// <param name="supportsSharingSmbRecycleBin">supportsSharingSmbRecycleBin (required).</param>
        /// <param name="supportsSharingSmbXattrs">supportsSharingSmbXattrs (required).</param>
        /// <param name="supportsSharingSmbSymlinks">supportsSharingSmbSymlinks (required).</param>
        /// <param name="supportsSharingSmbCustomOptions">supportsSharingSmbCustomOptions (required).</param>
        /// <param name="supportsSharingNfsPermissions">supportsSharingNfsPermissions (required).</param>
        public BackendProperties(bool supportsSharingRwPermissionsPriority = default(bool), bool supportsSharingAfp = default(bool), bool supportsSharingSmbRequireLogon = default(bool), bool supportsSharingSmbRecycleBin = default(bool), bool supportsSharingSmbXattrs = default(bool), bool supportsSharingSmbSymlinks = default(bool), bool supportsSharingSmbCustomOptions = default(bool), bool supportsSharingNfsPermissions = default(bool))
        {
            this.SupportsSharingRwPermissionsPriority = supportsSharingRwPermissionsPriority;
            this.SupportsSharingAfp = supportsSharingAfp;
            this.SupportsSharingSmbRequireLogon = supportsSharingSmbRequireLogon;
            this.SupportsSharingSmbRecycleBin = supportsSharingSmbRecycleBin;
            this.SupportsSharingSmbXattrs = supportsSharingSmbXattrs;
            this.SupportsSharingSmbSymlinks = supportsSharingSmbSymlinks;
            this.SupportsSharingSmbCustomOptions = supportsSharingSmbCustomOptions;
            this.SupportsSharingNfsPermissions = supportsSharingNfsPermissions;
        }

        /// <summary>
        /// Gets or Sets SupportsSharingRwPermissionsPriority
        /// </summary>
        [DataMember(Name = "supports_sharing_rw_permissions_priority", IsRequired = true, EmitDefaultValue = true)]
        public bool SupportsSharingRwPermissionsPriority { get; set; }

        /// <summary>
        /// Gets or Sets SupportsSharingAfp
        /// </summary>
        [DataMember(Name = "supports_sharing_afp", IsRequired = true, EmitDefaultValue = true)]
        public bool SupportsSharingAfp { get; set; }

        /// <summary>
        /// Gets or Sets SupportsSharingSmbRequireLogon
        /// </summary>
        [DataMember(Name = "supports_sharing_smb_require_logon", IsRequired = true, EmitDefaultValue = true)]
        public bool SupportsSharingSmbRequireLogon { get; set; }

        /// <summary>
        /// Gets or Sets SupportsSharingSmbRecycleBin
        /// </summary>
        [DataMember(Name = "supports_sharing_smb_recycle_bin", IsRequired = true, EmitDefaultValue = true)]
        public bool SupportsSharingSmbRecycleBin { get; set; }

        /// <summary>
        /// Gets or Sets SupportsSharingSmbXattrs
        /// </summary>
        [DataMember(Name = "supports_sharing_smb_xattrs", IsRequired = true, EmitDefaultValue = true)]
        public bool SupportsSharingSmbXattrs { get; set; }

        /// <summary>
        /// Gets or Sets SupportsSharingSmbSymlinks
        /// </summary>
        [DataMember(Name = "supports_sharing_smb_symlinks", IsRequired = true, EmitDefaultValue = true)]
        public bool SupportsSharingSmbSymlinks { get; set; }

        /// <summary>
        /// Gets or Sets SupportsSharingSmbCustomOptions
        /// </summary>
        [DataMember(Name = "supports_sharing_smb_custom_options", IsRequired = true, EmitDefaultValue = true)]
        public bool SupportsSharingSmbCustomOptions { get; set; }

        /// <summary>
        /// Gets or Sets SupportsSharingNfsPermissions
        /// </summary>
        [DataMember(Name = "supports_sharing_nfs_permissions", IsRequired = true, EmitDefaultValue = true)]
        public bool SupportsSharingNfsPermissions { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BackendProperties {\n");
            sb.Append("  SupportsSharingRwPermissionsPriority: ").Append(SupportsSharingRwPermissionsPriority).Append("\n");
            sb.Append("  SupportsSharingAfp: ").Append(SupportsSharingAfp).Append("\n");
            sb.Append("  SupportsSharingSmbRequireLogon: ").Append(SupportsSharingSmbRequireLogon).Append("\n");
            sb.Append("  SupportsSharingSmbRecycleBin: ").Append(SupportsSharingSmbRecycleBin).Append("\n");
            sb.Append("  SupportsSharingSmbXattrs: ").Append(SupportsSharingSmbXattrs).Append("\n");
            sb.Append("  SupportsSharingSmbSymlinks: ").Append(SupportsSharingSmbSymlinks).Append("\n");
            sb.Append("  SupportsSharingSmbCustomOptions: ").Append(SupportsSharingSmbCustomOptions).Append("\n");
            sb.Append("  SupportsSharingNfsPermissions: ").Append(SupportsSharingNfsPermissions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BackendProperties);
        }

        /// <summary>
        /// Returns true if BackendProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of BackendProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BackendProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SupportsSharingRwPermissionsPriority == input.SupportsSharingRwPermissionsPriority ||
                    this.SupportsSharingRwPermissionsPriority.Equals(input.SupportsSharingRwPermissionsPriority)
                ) && 
                (
                    this.SupportsSharingAfp == input.SupportsSharingAfp ||
                    this.SupportsSharingAfp.Equals(input.SupportsSharingAfp)
                ) && 
                (
                    this.SupportsSharingSmbRequireLogon == input.SupportsSharingSmbRequireLogon ||
                    this.SupportsSharingSmbRequireLogon.Equals(input.SupportsSharingSmbRequireLogon)
                ) && 
                (
                    this.SupportsSharingSmbRecycleBin == input.SupportsSharingSmbRecycleBin ||
                    this.SupportsSharingSmbRecycleBin.Equals(input.SupportsSharingSmbRecycleBin)
                ) && 
                (
                    this.SupportsSharingSmbXattrs == input.SupportsSharingSmbXattrs ||
                    this.SupportsSharingSmbXattrs.Equals(input.SupportsSharingSmbXattrs)
                ) && 
                (
                    this.SupportsSharingSmbSymlinks == input.SupportsSharingSmbSymlinks ||
                    this.SupportsSharingSmbSymlinks.Equals(input.SupportsSharingSmbSymlinks)
                ) && 
                (
                    this.SupportsSharingSmbCustomOptions == input.SupportsSharingSmbCustomOptions ||
                    this.SupportsSharingSmbCustomOptions.Equals(input.SupportsSharingSmbCustomOptions)
                ) && 
                (
                    this.SupportsSharingNfsPermissions == input.SupportsSharingNfsPermissions ||
                    this.SupportsSharingNfsPermissions.Equals(input.SupportsSharingNfsPermissions)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.SupportsSharingRwPermissionsPriority.GetHashCode();
                hashCode = hashCode * 59 + this.SupportsSharingAfp.GetHashCode();
                hashCode = hashCode * 59 + this.SupportsSharingSmbRequireLogon.GetHashCode();
                hashCode = hashCode * 59 + this.SupportsSharingSmbRecycleBin.GetHashCode();
                hashCode = hashCode * 59 + this.SupportsSharingSmbXattrs.GetHashCode();
                hashCode = hashCode * 59 + this.SupportsSharingSmbSymlinks.GetHashCode();
                hashCode = hashCode * 59 + this.SupportsSharingSmbCustomOptions.GetHashCode();
                hashCode = hashCode * 59 + this.SupportsSharingNfsPermissions.GetHashCode();
                return hashCode;
            }
        }

    }

}
