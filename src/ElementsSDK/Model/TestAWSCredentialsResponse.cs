/*
 * ELEMENTS API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = ElementsSDK.Client.OpenAPIDateConverter;

namespace ElementsSDK.Model
{
    /// <summary>
    /// TestAWSCredentialsResponse
    /// </summary>
    [DataContract(Name = "TestAWSCredentialsResponse")]
    public partial class TestAWSCredentialsResponse : IEquatable<TestAWSCredentialsResponse>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TestAWSCredentialsResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected TestAWSCredentialsResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="TestAWSCredentialsResponse" /> class.
        /// </summary>
        /// <param name="ok">ok (required).</param>
        /// <param name="arn">arn.</param>
        /// <param name="account">account.</param>
        /// <param name="userId">userId.</param>
        public TestAWSCredentialsResponse(bool ok = default(bool), string arn = default(string), string account = default(string), string userId = default(string))
        {
            this.Ok = ok;
            this.Arn = arn;
            this.Account = account;
            this.UserId = userId;
        }

        /// <summary>
        /// Gets or Sets Ok
        /// </summary>
        [DataMember(Name = "ok", IsRequired = true, EmitDefaultValue = true)]
        public bool Ok { get; set; }

        /// <summary>
        /// Gets or Sets Arn
        /// </summary>
        [DataMember(Name = "arn", EmitDefaultValue = false)]
        public string Arn { get; set; }

        /// <summary>
        /// Gets or Sets Account
        /// </summary>
        [DataMember(Name = "account", EmitDefaultValue = false)]
        public string Account { get; set; }

        /// <summary>
        /// Gets or Sets UserId
        /// </summary>
        [DataMember(Name = "user_id", EmitDefaultValue = false)]
        public string UserId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TestAWSCredentialsResponse {\n");
            sb.Append("  Ok: ").Append(Ok).Append("\n");
            sb.Append("  Arn: ").Append(Arn).Append("\n");
            sb.Append("  Account: ").Append(Account).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TestAWSCredentialsResponse);
        }

        /// <summary>
        /// Returns true if TestAWSCredentialsResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of TestAWSCredentialsResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TestAWSCredentialsResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Ok == input.Ok ||
                    this.Ok.Equals(input.Ok)
                ) && 
                (
                    this.Arn == input.Arn ||
                    (this.Arn != null &&
                    this.Arn.Equals(input.Arn))
                ) && 
                (
                    this.Account == input.Account ||
                    (this.Account != null &&
                    this.Account.Equals(input.Account))
                ) && 
                (
                    this.UserId == input.UserId ||
                    (this.UserId != null &&
                    this.UserId.Equals(input.UserId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.Ok.GetHashCode();
                if (this.Arn != null)
                    hashCode = hashCode * 59 + this.Arn.GetHashCode();
                if (this.Account != null)
                    hashCode = hashCode * 59 + this.Account.GetHashCode();
                if (this.UserId != null)
                    hashCode = hashCode * 59 + this.UserId.GetHashCode();
                return hashCode;
            }
        }

    }

}
